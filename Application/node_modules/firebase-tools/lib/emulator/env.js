"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setEnvVarsForEmulators = void 0;
const constants_1 = require("./constants");
const types_1 = require("./types");
const registry_1 = require("./registry");
function setEnvVarsForEmulators(env) {
    if (registry_1.EmulatorRegistry.isRunning(types_1.Emulators.DATABASE)) {
        env[constants_1.Constants.FIREBASE_DATABASE_EMULATOR_HOST] = registry_1.EmulatorRegistry.url(types_1.Emulators.DATABASE).host;
    }
    if (registry_1.EmulatorRegistry.isRunning(types_1.Emulators.FIRESTORE)) {
        const { host } = registry_1.EmulatorRegistry.url(types_1.Emulators.FIRESTORE);
        env[constants_1.Constants.FIRESTORE_EMULATOR_HOST] = host;
        env[constants_1.Constants.FIRESTORE_EMULATOR_ENV_ALT] = host;
    }
    if (registry_1.EmulatorRegistry.isRunning(types_1.Emulators.STORAGE)) {
        const { host } = registry_1.EmulatorRegistry.url(types_1.Emulators.STORAGE);
        env[constants_1.Constants.FIREBASE_STORAGE_EMULATOR_HOST] = host;
        env[constants_1.Constants.CLOUD_STORAGE_EMULATOR_HOST] = `http://${host}`;
    }
    if (registry_1.EmulatorRegistry.isRunning(types_1.Emulators.AUTH)) {
        env[constants_1.Constants.FIREBASE_AUTH_EMULATOR_HOST] = registry_1.EmulatorRegistry.url(types_1.Emulators.AUTH).host;
    }
    if (registry_1.EmulatorRegistry.isRunning(types_1.Emulators.HUB)) {
        env[constants_1.Constants.FIREBASE_EMULATOR_HUB] = registry_1.EmulatorRegistry.url(types_1.Emulators.HUB).host;
    }
    const pubsubEmulator = registry_1.EmulatorRegistry.isRunning(types_1.Emulators.PUBSUB);
    if (pubsubEmulator) {
        env[constants_1.Constants.PUBSUB_EMULATOR_HOST] = registry_1.EmulatorRegistry.url(types_1.Emulators.PUBSUB).host;
    }
    if (registry_1.EmulatorRegistry.isRunning(types_1.Emulators.EVENTARC)) {
        env[constants_1.Constants.CLOUD_EVENTARC_EMULATOR_HOST] = `http://${registry_1.EmulatorRegistry.url(types_1.Emulators.EVENTARC).host}`;
    }
}
exports.setEnvVarsForEmulators = setEnvVarsForEmulators;
